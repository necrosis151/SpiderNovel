<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spiderNovel.webapp.dao.Qidian_Novel_InfoDao">
    <resultMap id="BaseResultMap" type="com.novel.storage.model.Novel_Info">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, author, url, type, status
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from qidian_novel_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectTypeList" resultType="String">
        select
        DISTINCT type
        from qidian_novel_info
    </select>
    <select id="selectNovelByType" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from qidian_novel_info WHERE type =#{type}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from qidian_novel_info
    </select>
    <select id="selectByContent" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from qidian_novel_info WHERE name LIKE "%"#{content}"%"
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from qidian_novel_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="saveOrUpdate">
        <selectKey order="BEFORE" resultType="int" keyProperty="count">
            select count(*) from qidian_novel_info where id=#{id}
        </selectKey>
        <if test="count>0">
            update qidian_novel_info set name = #{name,jdbcType=VARCHAR},
            author = #{author,jdbcType=VARCHAR},
            url = #{url,jdbcType=VARCHAR},
            type = #{type,jdbcType=VARCHAR},
            status = #{status,jdbcType=VARCHAR}
            where id = #{id,jdbcType=INTEGER}
        </if>
        <if test="count==0">
            insert into qidian_novel_info (id, name, author,
            url, type, status)
            values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
            #{url,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})
        </if>
    </insert>
    <insert id="insert" parameterType="com.novel.storage.model.Novel_Info">
    insert into qidian_novel_info (id, name, author, 
      url, type, status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.novel.storage.model.Novel_Info">
        insert into qidian_novel_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.novel.storage.model.Novel_Info">
        update qidian_novel_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.novel.storage.model.Novel_Info">
    update qidian_novel_info
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>